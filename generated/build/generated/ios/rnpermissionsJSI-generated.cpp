/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleH.js
 */

#include "rnpermissionsJSI.h"

namespace facebook {
namespace react {

static jsi::Value __hostFunction_NativePermissionsModuleCxxSpecJSI_checkNotifications(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativePermissionsModuleCxxSpecJSI *>(&turboModule)->checkNotifications(rt);
}
static jsi::Value __hostFunction_NativePermissionsModuleCxxSpecJSI_openSettings(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativePermissionsModuleCxxSpecJSI *>(&turboModule)->openSettings(rt);
}
static jsi::Value __hostFunction_NativePermissionsModuleCxxSpecJSI_checkMultiplePermissions(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativePermissionsModuleCxxSpecJSI *>(&turboModule)->checkMultiplePermissions(rt, args[0].asObject(rt).asArray(rt));
}
static jsi::Value __hostFunction_NativePermissionsModuleCxxSpecJSI_checkPermission(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativePermissionsModuleCxxSpecJSI *>(&turboModule)->checkPermission(rt, args[0].asString(rt));
}
static jsi::Value __hostFunction_NativePermissionsModuleCxxSpecJSI_requestMultiplePermissions(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativePermissionsModuleCxxSpecJSI *>(&turboModule)->requestMultiplePermissions(rt, args[0].asObject(rt).asArray(rt));
}
static jsi::Value __hostFunction_NativePermissionsModuleCxxSpecJSI_requestPermission(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativePermissionsModuleCxxSpecJSI *>(&turboModule)->requestPermission(rt, args[0].asString(rt));
}
static jsi::Value __hostFunction_NativePermissionsModuleCxxSpecJSI_shouldShowRequestPermissionRationale(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativePermissionsModuleCxxSpecJSI *>(&turboModule)->shouldShowRequestPermissionRationale(rt, args[0].asString(rt));
}
static jsi::Value __hostFunction_NativePermissionsModuleCxxSpecJSI_check(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativePermissionsModuleCxxSpecJSI *>(&turboModule)->check(rt, args[0].asString(rt));
}
static jsi::Value __hostFunction_NativePermissionsModuleCxxSpecJSI_checkLocationAccuracy(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativePermissionsModuleCxxSpecJSI *>(&turboModule)->checkLocationAccuracy(rt);
}
static jsi::Value __hostFunction_NativePermissionsModuleCxxSpecJSI_getConstants(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativePermissionsModuleCxxSpecJSI *>(&turboModule)->getConstants(rt);
}
static jsi::Value __hostFunction_NativePermissionsModuleCxxSpecJSI_openLimitedPhotoLibraryPicker(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativePermissionsModuleCxxSpecJSI *>(&turboModule)->openLimitedPhotoLibraryPicker(rt);
}
static jsi::Value __hostFunction_NativePermissionsModuleCxxSpecJSI_request(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativePermissionsModuleCxxSpecJSI *>(&turboModule)->request(rt, args[0].asString(rt));
}
static jsi::Value __hostFunction_NativePermissionsModuleCxxSpecJSI_requestLocationAccuracy(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativePermissionsModuleCxxSpecJSI *>(&turboModule)->requestLocationAccuracy(rt, args[0].asString(rt));
}
static jsi::Value __hostFunction_NativePermissionsModuleCxxSpecJSI_requestNotifications(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativePermissionsModuleCxxSpecJSI *>(&turboModule)->requestNotifications(rt, args[0].asObject(rt).asArray(rt));
}

NativePermissionsModuleCxxSpecJSI::NativePermissionsModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("RNPermissionsModule", jsInvoker) {
  methodMap_["checkNotifications"] = MethodMetadata {0, __hostFunction_NativePermissionsModuleCxxSpecJSI_checkNotifications};
  methodMap_["openSettings"] = MethodMetadata {0, __hostFunction_NativePermissionsModuleCxxSpecJSI_openSettings};
  methodMap_["checkMultiplePermissions"] = MethodMetadata {1, __hostFunction_NativePermissionsModuleCxxSpecJSI_checkMultiplePermissions};
  methodMap_["checkPermission"] = MethodMetadata {1, __hostFunction_NativePermissionsModuleCxxSpecJSI_checkPermission};
  methodMap_["requestMultiplePermissions"] = MethodMetadata {1, __hostFunction_NativePermissionsModuleCxxSpecJSI_requestMultiplePermissions};
  methodMap_["requestPermission"] = MethodMetadata {1, __hostFunction_NativePermissionsModuleCxxSpecJSI_requestPermission};
  methodMap_["shouldShowRequestPermissionRationale"] = MethodMetadata {1, __hostFunction_NativePermissionsModuleCxxSpecJSI_shouldShowRequestPermissionRationale};
  methodMap_["check"] = MethodMetadata {1, __hostFunction_NativePermissionsModuleCxxSpecJSI_check};
  methodMap_["checkLocationAccuracy"] = MethodMetadata {0, __hostFunction_NativePermissionsModuleCxxSpecJSI_checkLocationAccuracy};
  methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativePermissionsModuleCxxSpecJSI_getConstants};
  methodMap_["openLimitedPhotoLibraryPicker"] = MethodMetadata {0, __hostFunction_NativePermissionsModuleCxxSpecJSI_openLimitedPhotoLibraryPicker};
  methodMap_["request"] = MethodMetadata {1, __hostFunction_NativePermissionsModuleCxxSpecJSI_request};
  methodMap_["requestLocationAccuracy"] = MethodMetadata {1, __hostFunction_NativePermissionsModuleCxxSpecJSI_requestLocationAccuracy};
  methodMap_["requestNotifications"] = MethodMetadata {1, __hostFunction_NativePermissionsModuleCxxSpecJSI_requestNotifications};
}


} // namespace react
} // namespace facebook
